data intlist = Nil | Cons int * intlist

let map = fun map (f : int -> int) (xs : intlist) : intlist =>
   case xs of
      Nil -> Nil;
      Cons y -> Cons (f (fst y), map f (snd y))
in
let f = fun inc (x : int) : int => x + 1
in
map f (Cons (6, Cons (7, Cons (2, Nil))))
