data intlist = Nil | Cons int * intlist

let map = fun map (f : int -> int) (xs : intlist) : intlist =>
   case xs of
      Nil -> Nil;
      Cons y -> Cons (f (fst y), map f (snd y)) in
let t = trace (
let abs = fun abs (x : int) : int =>
    if x > 0
    then x
    else (0 - x) in
let xs = Cons ((-1), Cons (2, Nil)) in
map abs xs) in
let s = traceSlice (t, Cons (_:int, Cons (2, Nil))) in
read (s)
