module Main where

import           SlicerTestSuiteUtils ( runTMLTest )

import           Test.Tasty ( TestTree, defaultMain, testGroup )

main :: IO ()
main = defaultMain tests

tests :: TestTree
tests =
    testGroup "Run TML files" (map runTMLTest
      [ "abs"
      , "array"
      , "array2"
      , "array3"
      , "copy-list"
      , "curried-componentwise-sum"
      , "curried-pointwise-sum"
      , "curried-pointwise-sum-two"
      , "example"
      , "exception_assign"
      , "exceptions"
      , "exceptions2"
      , "exceptions3"
      , "filter"
      , "foo"
      , "gauss"
      , "icfp17-example"
      , "icfp17-example2"
      , "map-increment-closed"
      , "map-increment"
      , "map"
      , "meanSquareDiff"
      , "meanSquare"
      , "mergesort"
      , "merge"
      , "newton"
      , "let-exception"
      , "operators"
      , "proportion"
      , "raise_inside"
      , "refs"
      , "refs-bslice"
      , "reverse-eval"
      , "reverse-slice"
      , "reverse"
      , "reverse-trace"
      , "simple-closure"
      , "sort-bug-2"
      , "sort-bug"
      , "sort-eval"
      , "sort-eval-trace-slice"
      , "sort-eval-trace"
      , "sort"
      , "sum-eval"
      , "sum-eval-trace-slice"
      , "sum-eval-trace"
      , "T2"
      , "T9"
      , "T13"
      , "T43"
      , "T47"
      , "T52"
      , "T56"
      , "T59"
      , "T62"
      , "uncurried-componentwise-sum"
      , "while"
      , "while2"
      , "while3"
      , "while4"
      ] )
